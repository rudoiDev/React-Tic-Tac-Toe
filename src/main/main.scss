//? Адаптивное свойство

$maxWidth: 300;
$maxWidthContainer: 600; 

@mixin adaptive-value($property, $startSize, $minSize, $type) {
	$addSize: $startSize - $minSize;
	@if	$type == 1 {
		// Только если нужно менять свойство, когда контейнер уменьшается
		#{$property}: $startSize + px;
		@media (max-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320})) !important
		}
	} @else if $type==2 {
		// Только если нужно менять свойство, когда контейнер увеличивается
		#{$property}: $startSize + px;
		@media (min-width: #{$maxWidthContainer + px}) {
			#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})) !important
		}
	} @else {
		// Если нужно, чтобы свойство увеличивалось и уменьшалось пропорционально окну браузера всегда
		#{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320})) !important
	}
}

.wrapper_block {
	display: flex;
	@include adaptive-value('max-width', 500, 300, 1);
	flex-wrap: wrap;
	margin: 0 auto;
	justify-content: center;
	.block {
		cursor: pointer;
		text-align: center;
		width: 30px;
		height: 30px;
		font-size: 30px;
		@include adaptive-value('padding', 60, 20, 1);
		border-radius: 10px;
		border: 1px solid black;
		transition: box-shadow .2s ease-in-out;
	}
	.block:hover {
		box-shadow: 0px 0px 10px black inset;
	}
	.block.active {
		background: #FF7D7A;
	}
}   